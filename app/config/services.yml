# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/service_container.html

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Action\:
        resource: '../../src/AppBundle/Action'
        public: true
        tags: ['controller.service_arguments']

    AppBundle\Action\Webhook\SlackAction:
        public: true
        arguments:
            $slackWebhookToken: '%slack.webhook_token%'

    GuzzleHttp\Client: ~
    GuzzleHttp\ClientInterface: '@GuzzleHttp\Client'

    AppBundle\Slack\Client:
        arguments:
            $baseUri: '%slack.base_uri%'
            $token: '%slack.api_token%'

    AppBundle\DialogFlow\Client:
        arguments:
            $baseUri: '%google.dialogflow.base_uri%'
            $token: '%google.dialogflow.api_token%'
